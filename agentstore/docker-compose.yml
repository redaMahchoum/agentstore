services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - keycloak
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/agentstore
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate
      - KEYCLOAK_AUTH_SERVER_URL=http://keycloak:8080/auth
      - KEYCLOAK_REALM=agentstore
      - KEYCLOAK_RESOURCE=agentstore-app
    networks:
      - agentstore-network
    volumes:
      - ./target/agentstore.jar:/app/agentstore.jar

  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=agentstore
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - agentstore-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin"]
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    ports:
      - "8081:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=admin
      - KC_DB_PASSWORD=admin
    command:
      - start-dev
    depends_on:
      - postgres
    networks:
      - agentstore-network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health/ready"]
      interval: 5s
      timeout: 5s
      retries: 10

networks:
  agentstore-network:
    driver: bridge

volumes:
  postgres-data: 